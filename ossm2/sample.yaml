apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  creationTimestamp: "2020-12-12T11:55:13Z"
  finalizers:
  - maistra.io/istio-operator
  generation: 1
  managedFields:
  - apiVersion: maistra.io/v2
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        .: {}
        f:addons:
          .: {}
          f:grafana:
            .: {}
            f:enabled: {}
          f:jaeger:
            .: {}
            f:install:
              .: {}
              f:storage:
                .: {}
                f:type: {}
          f:kiali:
            .: {}
            f:enabled: {}
          f:prometheus:
            .: {}
            f:enabled: {}
        f:gateways:
          .: {}
          f:openshiftRoute:
            .: {}
            f:enabled: {}
        f:policy:
          .: {}
          f:mixer:
            .: {}
            f:enableChecks: {}
            f:failOpen: {}
            f:sessionAffinity: {}
          f:type: {}
        f:runtime:
          .: {}
          f:defaults:
            .: {}
            f:deployment:
              .: {}
              f:podDisruption:
                .: {}
                f:enabled: {}
        f:security:
          .: {}
          f:controlPlane:
            .: {}
            f:mtls: {}
          f:dataPlane:
            .: {}
            f:automtls: {}
            f:mtls: {}
        f:telemetry:
          .: {}
          f:type: {}
        f:tracing:
          .: {}
          f:sampling: {}
          f:type: {}
        f:version: {}
    manager: Mozilla
    operation: Update
    time: "2020-12-12T11:55:13Z"
  - apiVersion: maistra.io/v2
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers: {}
      f:status:
        .: {}
        f:annotations:
          .: {}
          f:alwaysReadyComponents: {}
          f:readyComponentCount: {}
        f:appliedSpec:
          .: {}
          f:addons:
            .: {}
            f:grafana:
              .: {}
              f:enabled: {}
              f:install:
                .: {}
                f:service:
                  .: {}
                  f:ingress:
                    .: {}
                    f:enabled: {}
                  f:metadata:
                    .: {}
                    f:annotations:
                      .: {}
                      f:service.alpha.openshift.io/serving-cert-secret-name: {}
            f:jaeger:
              .: {}
              f:install:
                .: {}
                f:ingress:
                  .: {}
                  f:enabled: {}
                f:storage:
                  .: {}
                  f:type: {}
              f:name: {}
            f:kiali:
              .: {}
              f:enabled: {}
              f:install:
                .: {}
                f:dashboard:
                  .: {}
                  f:viewOnly: {}
                f:service:
                  .: {}
                  f:ingress:
                    .: {}
                    f:enabled: {}
              f:name: {}
            f:prometheus:
              .: {}
              f:enabled: {}
              f:install:
                .: {}
                f:service:
                  .: {}
                  f:ingress:
                    .: {}
                    f:enabled: {}
                  f:metadata:
                    .: {}
                    f:annotations:
                      .: {}
                      f:service.alpha.openshift.io/serving-cert-secret-name: {}
          f:gateways:
            .: {}
            f:egress:
              .: {}
              f:enabled: {}
              f:runtime:
                .: {}
                f:container:
                  .: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                f:deployment:
                  .: {}
                  f:autoScaling:
                    .: {}
                    f:enabled: {}
              f:service: {}
            f:enabled: {}
            f:ingress:
              .: {}
              f:enabled: {}
              f:ingress: {}
              f:runtime:
                .: {}
                f:container:
                  .: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                f:deployment:
                  .: {}
                  f:autoScaling:
                    .: {}
                    f:enabled: {}
              f:service:
                .: {}
                f:type: {}
            f:openshiftRoute:
              .: {}
              f:enabled: {}
          f:general:
            .: {}
            f:logging:
              .: {}
              f:componentLevels:
                .: {}
                f:default: {}
          f:policy:
            .: {}
            f:mixer:
              .: {}
              f:enableChecks: {}
              f:failOpen: {}
              f:sessionAffinity: {}
            f:type: {}
          f:profiles: {}
          f:proxy:
            .: {}
            f:injection:
              .: {}
              f:autoInject: {}
            f:networking:
              .: {}
              f:dns:
                .: {}
                f:refreshRate: {}
              f:initialization:
                .: {}
                f:initContainer:
                  .: {}
                  f:runtime:
                    .: {}
                    f:imageName: {}
              f:protocol:
                .: {}
                f:autoDetect:
                  .: {}
                  f:inbound: {}
                  f:outbound: {}
            f:runtime:
              .: {}
              f:container:
                .: {}
                f:imageName: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
          f:runtime:
            .: {}
            f:components:
              .: {}
              f:3scale:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:imageRegistry: {}
                  f:imageTag: {}
              f:global.oauthproxy:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:imagePullPolicy: {}
                  f:imageRegistry: {}
                  f:imageTag: {}
              f:grafana:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
              f:mixer:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
              f:mixer.policy:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                f:deployment:
                  .: {}
                  f:autoScaling:
                    .: {}
                    f:enabled: {}
              f:mixer.telemetry:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                f:deployment:
                  .: {}
                  f:autoScaling:
                    .: {}
                    f:enabled: {}
              f:pilot:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                f:deployment:
                  .: {}
                  f:autoScaling:
                    .: {}
                    f:enabled: {}
              f:prometheus:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
              f:wasmExtensions.cacher:
                .: {}
                f:container:
                  .: {}
                  f:imageName: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
            f:defaults:
              .: {}
              f:container:
                .: {}
                f:imageRegistry: {}
                f:imageTag: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
              f:deployment:
                .: {}
                f:podDisruption:
                  .: {}
                  f:enabled: {}
          f:security:
            .: {}
            f:controlPlane:
              .: {}
              f:mtls: {}
            f:dataPlane:
              .: {}
              f:automtls: {}
              f:mtls: {}
            f:identity:
              .: {}
              f:type: {}
          f:techPreview:
            .: {}
            f:global:
              .: {}
              f:configNamespace: {}
              f:configRootNamespace: {}
              f:istioNamespace: {}
              f:policyNamespace: {}
              f:prometheusNamespace: {}
              f:telemetryNamespace: {}
              f:tracer:
                .: {}
                f:zipkin:
                  .: {}
                  f:address: {}
            f:istio_cni:
              .: {}
              f:istio_cni_network: {}
            f:kiali:
              .: {}
              f:install: {}
            f:revision: {}
            f:sidecarInjectorWebhook:
              .: {}
              f:objectSelector:
                .: {}
                f:enabled: {}
            f:tracing:
              .: {}
              f:jaeger:
                .: {}
                f:install: {}
            f:wasmExtensions:
              .: {}
              f:enabled: {}
          f:telemetry:
            .: {}
            f:type: {}
          f:tracing:
            .: {}
            f:sampling: {}
            f:type: {}
          f:version: {}
        f:appliedValues:
          .: {}
          f:istio:
            .: {}
            f:gateways:
              .: {}
              f:enabled: {}
              f:istio-egressgateway:
                .: {}
                f:autoscaleEnabled: {}
                f:enabled: {}
                f:gatewayType: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
              f:istio-ingressgateway:
                .: {}
                f:autoscaleEnabled: {}
                f:enabled: {}
                f:gatewayType: {}
                f:ior_enabled: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:type: {}
            f:global:
              .: {}
              f:configNamespace: {}
              f:configRootNamespace: {}
              f:controlPlaneSecurityEnabled: {}
              f:defaultPodDisruptionBudget:
                .: {}
                f:enabled: {}
              f:defaultResources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:disablePolicyChecks: {}
              f:enableTracing: {}
              f:hub: {}
              f:istioNamespace: {}
              f:jwtPolicy: {}
              f:k8sIngress:
                .: {}
                f:enableHttps: {}
                f:enabled: {}
                f:gatewayName: {}
              f:logging:
                .: {}
                f:level: {}
              f:meshExpansion:
                .: {}
                f:enabled: {}
                f:useILB: {}
              f:mtls:
                .: {}
                f:auto: {}
                f:enabled: {}
              f:multiCluster:
                .: {}
                f:enabled: {}
                f:multiClusterOverrides:
                  .: {}
                  f:expansionEnabled: {}
                  f:multiClusterEnabled: {}
              f:oauthproxy:
                .: {}
                f:hub: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:tag: {}
              f:policyCheckFailOpen: {}
              f:policyNamespace: {}
              f:prometheusNamespace: {}
              f:proxy:
                .: {}
                f:autoInject: {}
                f:dnsRefreshRate: {}
                f:image: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:tracer: {}
              f:proxy_init:
                .: {}
                f:image: {}
              f:tag: {}
              f:telemetryNamespace: {}
              f:tracer:
                .: {}
                f:zipkin:
                  .: {}
                  f:address: {}
            f:grafana:
              .: {}
              f:enabled: {}
              f:image: {}
              f:ingress:
                .: {}
                f:enabled: {}
              f:service:
                .: {}
                f:annotations:
                  .: {}
                  f:service.alpha.openshift.io/serving-cert-secret-name: {}
            f:istio_cni:
              .: {}
              f:enabled: {}
              f:istio_cni_network: {}
            f:kiali:
              .: {}
              f:dashboard:
                .: {}
                f:viewOnlyMode: {}
              f:enabled: {}
              f:ingress:
                .: {}
                f:enabled: {}
              f:install: {}
              f:resourceName: {}
            f:mixer:
              .: {}
              f:adapters:
                .: {}
                f:prometheus:
                  .: {}
                  f:enabled: {}
              f:image: {}
              f:policy:
                .: {}
                f:autoscaleEnabled: {}
                f:enabled: {}
                f:image: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:sessionAffinityEnabled: {}
              f:telemetry:
                .: {}
                f:autoscaleEnabled: {}
                f:enabled: {}
                f:image: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
            f:pilot:
              .: {}
              f:autoscaleEnabled: {}
              f:enableProtocolSniffingForInbound: {}
              f:enableProtocolSniffingForOutbound: {}
              f:image: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:traceSampling: {}
            f:policy:
              .: {}
              f:implementation: {}
            f:prometheus:
              .: {}
              f:enabled: {}
              f:image: {}
              f:ingress:
                .: {}
                f:enabled: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:service:
                .: {}
                f:annotations:
                  .: {}
                  f:service.alpha.openshift.io/serving-cert-secret-name: {}
            f:revision: {}
            f:sidecarInjectorWebhook:
              .: {}
              f:enableNamespacesByDefault: {}
              f:objectSelector:
                .: {}
                f:enabled: {}
            f:telemetry:
              .: {}
              f:enabled: {}
              f:implementation: {}
              f:v1:
                .: {}
                f:enabled: {}
              f:v2:
                .: {}
                f:enabled: {}
                f:prometheus:
                  .: {}
                  f:enabled: {}
            f:tracing:
              .: {}
              f:enabled: {}
              f:ingress:
                .: {}
                f:enabled: {}
              f:jaeger:
                .: {}
                f:install: {}
                f:resourceName: {}
                f:template: {}
              f:provider: {}
            f:wasmExtensions:
              .: {}
              f:cacher:
                .: {}
                f:image: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
              f:enabled: {}
          f:profiles: {}
          f:template: {}
          f:threeScale:
            .: {}
            f:hub: {}
            f:image: {}
            f:tag: {}
          f:version: {}
        f:chartVersion: {}
        f:components: {}
        f:conditions: {}
        f:observedGeneration: {}
        f:operatorVersion: {}
        f:readiness:
          .: {}
          f:components:
            .: {}
            f:pending: {}
            f:ready: {}
            f:unready: {}
    manager: istio-operator
    operation: Update
    time: "2020-12-12T11:56:37Z"
  name: basic-install
  namespace: user1
  resourceVersion: "488090"
  selfLink: /apis/maistra.io/v2/namespaces/user1/servicemeshcontrolplanes/basic-install
  uid: 8a3c8876-ac37-494b-93fa-09a24369187a
spec:
  addons:
    grafana:
      enabled: true
    jaeger:
      install:
        storage:
          type: Memory
    kiali:
      enabled: true
    prometheus:
      enabled: true
  gateways:
    openshiftRoute:
      enabled: true
  policy:
    mixer:
      enableChecks: true
      failOpen: true
      sessionAffinity: true
    type: Istiod
  profiles:
  - default
  runtime:
    defaults:
      deployment:
        podDisruption:
          enabled: false
  security:
    controlPlane:
      mtls: true
    dataPlane:
      automtls: true
      mtls: true
  telemetry:
    type: Istiod
  tracing:
    sampling: 10000
    type: Jaeger
  version: v2.0
status:
  annotations:
    alwaysReadyComponents: mesh-config,telemetry-common,tracing,kiali
    readyComponentCount: 9/9
  appliedSpec:
    addons:
      grafana:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      jaeger:
        install:
          ingress:
            enabled: true
          storage:
            type: Memory
        name: jaeger
      kiali:
        enabled: true
        install:
          dashboard:
            viewOnly: false
          service:
            ingress:
              enabled: true
        name: kiali
      prometheus:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
    gateways:
      egress:
        enabled: true
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        service: {}
      enabled: true
      ingress:
        enabled: true
        ingress: false
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        service:
          type: ClusterIP
      openshiftRoute:
        enabled: true
    general:
      logging:
        componentLevels:
          default: warn
    policy:
      mixer:
        enableChecks: true
        failOpen: true
        sessionAffinity: true
      type: Istiod
    profiles:
    - default
    proxy:
      injection:
        autoInject: false
      networking:
        dns:
          refreshRate: 300s
        initialization:
          initContainer:
            runtime:
              imageName: registry.redhat.io/openshift-service-mesh/proxy-init-rhel7@sha256:28bd763150186998d91825377b400438686e6d2e3897306a1154cbf4d830c3a1
        protocol:
          autoDetect:
            inbound: false
            outbound: false
      runtime:
        container:
          imageName: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:0caf9b891ee75f26e4bf2ac9274c7578da5786305e6987a6a4163c5173bf243e
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
    runtime:
      components:
        3scale:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/3scale-istio-adapter-rhel8@sha256:7adabe1845fdd23be1cdb8df2a5ad1c83607a83ec51ee3860cfe37e6558dcbc8
            imageRegistry: registry.redhat.io/openshift-service-mesh
            imageTag: 2.0.0
        global.oauthproxy:
          container:
            imageName: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f80375a7ad29fb23de302b0e82ae460580681d1805829c214bad13e84d94b784
            imagePullPolicy: IfNotPresent
            imageRegistry: registry.redhat.io/openshift4
            imageTag: v4.4
        grafana:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:a5e722d93cd52c746cd7568debde47abdebdaef75408548a08eeb92857ec3de8
        mixer:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:a1287c9d0d381efe1324ae41d31fdec74c15c9cca768eaa51e07029ce1b291ce
        mixer.policy:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:a1287c9d0d381efe1324ae41d31fdec74c15c9cca768eaa51e07029ce1b291ce
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        mixer.telemetry:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:a1287c9d0d381efe1324ae41d31fdec74c15c9cca768eaa51e07029ce1b291ce
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        pilot:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:e027f34c0d81c61fe2984c1488b49ab29589de6b2540058b5a15ff91b123e342
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        prometheus:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/prometheus-rhel8@sha256:50c5d143e41067a06ebb2a8c83a5c5c022d3077528f6b06b83dc9eb0135a8791
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
        wasmExtensions.cacher:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:e027f34c0d81c61fe2984c1488b49ab29589de6b2540058b5a15ff91b123e342
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
      defaults:
        container:
          imageRegistry: registry.redhat.io/openshift-service-mesh
          imageTag: 2.0.0
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        deployment:
          podDisruption:
            enabled: false
    security:
      controlPlane:
        mtls: true
      dataPlane:
        automtls: true
        mtls: true
      identity:
        type: Kubernetes
    techPreview:
      global:
        configNamespace: user1
        configRootNamespace: user1
        istioNamespace: user1
        policyNamespace: user1
        prometheusNamespace: user1
        telemetryNamespace: user1
        tracer:
          zipkin:
            address: jaeger-collector.user1.svc:9411
      istio_cni:
        istio_cni_network: v2-0-istio-cni
      kiali:
        install: true
      revision: basic-install
      sidecarInjectorWebhook:
        objectSelector:
          enabled: false
      tracing:
        jaeger:
          install: true
      wasmExtensions:
        enabled: false
    telemetry:
      type: Istiod
    tracing:
      sampling: 10000
      type: Jaeger
    version: v2.0
  appliedValues:
    istio:
      gateways:
        enabled: true
        istio-egressgateway:
          autoscaleEnabled: false
          enabled: true
          gatewayType: egress
          name: istio-egressgateway
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        istio-ingressgateway:
          autoscaleEnabled: false
          enabled: true
          gatewayType: ingress
          ior_enabled: true
          name: istio-ingressgateway
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          type: ClusterIP
      global:
        configNamespace: user1
        configRootNamespace: user1
        controlPlaneSecurityEnabled: true
        defaultPodDisruptionBudget:
          enabled: false
        defaultResources:
          requests:
            cpu: 10m
            memory: 128Mi
        disablePolicyChecks: false
        enableTracing: true
        hub: registry.redhat.io/openshift-service-mesh
        istioNamespace: user1
        jwtPolicy: first-party-jwt
        k8sIngress:
          enableHttps: false
          enabled: false
          gatewayName: ingressgateway
        logging:
          level: default:warn
        meshExpansion:
          enabled: false
          useILB: false
        mtls:
          auto: true
          enabled: true
        multiCluster:
          enabled: false
          multiClusterOverrides:
            expansionEnabled: null
            multiClusterEnabled: null
        oauthproxy:
          hub: registry.redhat.io/openshift4
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f80375a7ad29fb23de302b0e82ae460580681d1805829c214bad13e84d94b784
          imagePullPolicy: IfNotPresent
          tag: v4.4
        policyCheckFailOpen: true
        policyNamespace: user1
        prometheusNamespace: user1
        proxy:
          autoInject: disabled
          dnsRefreshRate: 300s
          image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:0caf9b891ee75f26e4bf2ac9274c7578da5786305e6987a6a4163c5173bf243e
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          tracer: zipkin
        proxy_init:
          image: registry.redhat.io/openshift-service-mesh/proxy-init-rhel7@sha256:28bd763150186998d91825377b400438686e6d2e3897306a1154cbf4d830c3a1
        tag: 2.0.0
        telemetryNamespace: user1
        tracer:
          zipkin:
            address: jaeger-collector.user1.svc:9411
      grafana:
        enabled: true
        image: registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:a5e722d93cd52c746cd7568debde47abdebdaef75408548a08eeb92857ec3de8
        ingress:
          enabled: true
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      istio_cni:
        enabled: true
        istio_cni_network: v2-0-istio-cni
      kiali:
        dashboard:
          viewOnlyMode: false
        enabled: true
        ingress:
          enabled: true
        install: true
        resourceName: kiali
      mixer:
        adapters:
          prometheus:
            enabled: true
        image: registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:a1287c9d0d381efe1324ae41d31fdec74c15c9cca768eaa51e07029ce1b291ce
        policy:
          autoscaleEnabled: false
          enabled: false
          image: registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:a1287c9d0d381efe1324ae41d31fdec74c15c9cca768eaa51e07029ce1b291ce
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          sessionAffinityEnabled: true
        telemetry:
          autoscaleEnabled: false
          enabled: false
          image: registry.redhat.io/openshift-service-mesh/mixer-rhel8@sha256:a1287c9d0d381efe1324ae41d31fdec74c15c9cca768eaa51e07029ce1b291ce
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
      pilot:
        autoscaleEnabled: false
        enableProtocolSniffingForInbound: false
        enableProtocolSniffingForOutbound: false
        image: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:e027f34c0d81c61fe2984c1488b49ab29589de6b2540058b5a15ff91b123e342
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        traceSampling: 100
      policy:
        implementation: Istiod
      prometheus:
        enabled: true
        image: registry.redhat.io/openshift-service-mesh/prometheus-rhel8@sha256:50c5d143e41067a06ebb2a8c83a5c5c022d3077528f6b06b83dc9eb0135a8791
        ingress:
          enabled: true
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
      revision: basic-install
      sidecarInjectorWebhook:
        enableNamespacesByDefault: false
        objectSelector:
          enabled: false
      telemetry:
        enabled: true
        implementation: Istiod
        v1:
          enabled: false
        v2:
          enabled: true
          prometheus:
            enabled: true
      tracing:
        enabled: true
        ingress:
          enabled: true
        jaeger:
          install: true
          resourceName: jaeger
          template: all-in-one
        provider: jaeger
      wasmExtensions:
        cacher:
          image: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:e027f34c0d81c61fe2984c1488b49ab29589de6b2540058b5a15ff91b123e342
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        enabled: false
    profiles:
    - default
    template: default
    threeScale:
      hub: registry.redhat.io/openshift-service-mesh
      image: registry.redhat.io/openshift-service-mesh/3scale-istio-adapter-rhel8@sha256:7adabe1845fdd23be1cdb8df2a5ad1c83607a83ec51ee3860cfe37e6558dcbc8
      tag: 2.0.0
    version: v2.0
  chartVersion: 2.0.0.2
  components:
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:14Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:14Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-discovery
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:34Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:34Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: mesh-config
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:34Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:34Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: telemetry-common
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:34Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:34Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: prometheus
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:56Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:56Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: tracing
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:56Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:56Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-ingress
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:56Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:56Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-egress
  - conditions:
    - lastTransitionTime: "2020-12-12T11:55:57Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:55:57Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: grafana
  - conditions:
    - lastTransitionTime: "2020-12-12T11:56:13Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2020-12-12T11:56:13Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: kiali
  conditions:
  - lastTransitionTime: "2020-12-12T11:56:37Z"
    message: Successfully installed all mesh components
    reason: InstallSuccessful
    status: "True"
    type: Installed
  - lastTransitionTime: "2020-12-12T11:56:37Z"
    message: Successfully installed version 2.0.0-13.el8-1
    reason: InstallSuccessful
    status: "True"
    type: Reconciled
  - lastTransitionTime: "2020-12-12T11:56:37Z"
    message: All component deployments are Available
    reason: ComponentsReady
    status: "True"
    type: Ready
  observedGeneration: 1
  operatorVersion: 2.0.0-13.el8
  readiness:
    components:
      pending: []
      ready:
      - grafana
      - istio-discovery
      - istio-egress
      - istio-ingress
      - kiali
      - mesh-config
      - prometheus
      - telemetry-common
      - tracing
      unready: []
